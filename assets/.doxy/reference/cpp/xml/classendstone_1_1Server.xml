<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classendstone_1_1Server" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>endstone::Server</compoundname>
    <includes refid="server_8h" local="no">endstone/server.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classendstone_1_1Server_1a7be1e023a703bcc57e49e341c9987397" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string endstone::Server::BroadcastChannelAdmin</definition>
        <argsstring></argsstring>
        <name>BroadcastChannelAdmin</name>
        <initializer>= &quot;endstone.broadcast.admin&quot;</initializer>
        <briefdescription>
<para>Used for all administrative messages, such as an operator using a command. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="194" column="37" bodyfile="include/endstone/server.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classendstone_1_1Server_1ac3e6fddabfcbb3075d2539b673d04ed2" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string endstone::Server::BroadcastChannelUser</definition>
        <argsstring></argsstring>
        <name>BroadcastChannelUser</name>
        <initializer>= &quot;endstone.broadcast.user&quot;</initializer>
        <briefdescription>
<para>Used for all announcement messages, such as informing users that a player has joined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="199" column="37" bodyfile="include/endstone/server.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classendstone_1_1Server_1a2dee067a586bcea2355896f716fc3375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>endstone::Server::Server</definition>
        <argsstring>()=default</argsstring>
        <name>Server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="39" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1ab38f521ee3c088261a6448d3bf9d4dbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>endstone::Server::Server</definition>
        <argsstring>(const Server &amp;)=delete</argsstring>
        <name>Server</name>
        <param>
          <type>const <ref refid="classendstone_1_1Server" kindref="compound">Server</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a82eb8fae56d70312309a13c558171eae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classendstone_1_1Server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server&amp; endstone::Server::operator=</definition>
        <argsstring>(const Server &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classendstone_1_1Server" kindref="compound">Server</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="41" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a6d90d04047e7e0730d9822be14611ba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual endstone::Server::~Server</definition>
        <argsstring>()=default</argsstring>
        <name>~Server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="43" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a2478b382f6098c157032048b0f6f64ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string endstone::Server::getName</definition>
        <argsstring>() const =0</argsstring>
        <name>getName</name>
        <briefdescription>
<para>Gets the name of this server implementation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>name of this server implementation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="50" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a29d50cb9b2c09942f11148c2e78a9d6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string endstone::Server::getVersion</definition>
        <argsstring>() const =0</argsstring>
        <name>getVersion</name>
        <briefdescription>
<para>Gets the version string of this server implementation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>version of this server implementation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="57" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a849bb8c24789cc5130abd4d4bbb5dddb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string endstone::Server::getMinecraftVersion</definition>
        <argsstring>() const =0</argsstring>
        <name>getMinecraftVersion</name>
        <briefdescription>
<para>Gets the Minecraft version that this server is running. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>version of Minecraft </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="64" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a0a66b9b4460a3a698ddd2527304f814e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Logger" kindref="compound">Logger</ref> &amp;</type>
        <definition>virtual Logger&amp; endstone::Server::getLogger</definition>
        <argsstring>() const =0</argsstring>
        <name>getLogger</name>
        <briefdescription>
<para>Returns the primary logger associated with this server instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classendstone_1_1Logger" kindref="compound">Logger</ref> associated with this server </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="71" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a612846abaf6bd84f56d1cb81a3c0aa95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1PluginManager" kindref="compound">PluginManager</ref> &amp;</type>
        <definition>virtual PluginManager&amp; endstone::Server::getPluginManager</definition>
        <argsstring>() const =0</argsstring>
        <name>getPluginManager</name>
        <briefdescription>
<para>Gets the plugin manager for interfacing with plugins. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a plugin manager for this <ref refid="classendstone_1_1Server" kindref="compound">Server</ref> instance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="78" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1ad65f8ef9b0f8f4af5d56788af89c5367" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1PluginCommand" kindref="compound">PluginCommand</ref> *</type>
        <definition>virtual PluginCommand* endstone::Server::getPluginCommand</definition>
        <argsstring>(std::string name) const =0</argsstring>
        <name>getPluginCommand</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Gets a <ref refid="classendstone_1_1PluginCommand" kindref="compound">PluginCommand</ref> with the given name or alias. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the command to retrieve </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a plugin command if found, null otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="86" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1aaa9adeb8b18d1944314e83375418f1b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1CommandSender" kindref="compound">CommandSender</ref> &amp;</type>
        <definition>virtual CommandSender&amp; endstone::Server::getCommandSender</definition>
        <argsstring>() const =0</argsstring>
        <name>getCommandSender</name>
        <briefdescription>
<para>Gets a <ref refid="classendstone_1_1CommandSender" kindref="compound">CommandSender</ref> for this server. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a console command sender </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="93" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a9c8fecebf6fb62aa916da3017cb63de6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Server::dispatchCommand</definition>
        <argsstring>(CommandSender &amp;sender, std::string command) const =0</argsstring>
        <name>dispatchCommand</name>
        <param>
          <type><ref refid="classendstone_1_1CommandSender" kindref="compound">CommandSender</ref> &amp;</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>command</declname>
        </param>
        <briefdescription>
<para>Dispatches a command on this server, and executes it if found. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sender</parametername>
</parameternamelist>
<parameterdescription>
<para>the apparent sender of the command </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>the command + arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if execution is successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="102" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1aee8ec47d389d77f2a36ed49777a77621" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Scheduler" kindref="compound">Scheduler</ref> &amp;</type>
        <definition>virtual Scheduler&amp; endstone::Server::getScheduler</definition>
        <argsstring>() const =0</argsstring>
        <name>getScheduler</name>
        <briefdescription>
<para>Gets the scheduler for managing scheduled events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a scheduling service for this server </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="109" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a6efe35e1a4eb79e433dbf17edf07fe1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; <ref refid="classendstone_1_1Level" kindref="compound">Level</ref> * &gt;</type>
        <definition>virtual std::vector&lt;Level *&gt; endstone::Server::getLevels</definition>
        <argsstring>() const =0</argsstring>
        <name>getLevels</name>
        <briefdescription>
<para>Gets a list of all levels on this server. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a list of levels </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="116" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a0a736709b490c346ade02b1462f5fb55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Level" kindref="compound">Level</ref> *</type>
        <definition>virtual Level* endstone::Server::getLevel</definition>
        <argsstring>(std::string name) const =0</argsstring>
        <name>getLevel</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Gets the level with the given name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the level to retrieve </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a level with the given name, or nullptr if none exists </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="124" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a87fe533801da1f729baa68cc96099546" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; <ref refid="classendstone_1_1Player" kindref="compound">Player</ref> * &gt;</type>
        <definition>virtual std::vector&lt;Player *&gt; endstone::Server::getOnlinePlayers</definition>
        <argsstring>() const =0</argsstring>
        <name>getOnlinePlayers</name>
        <briefdescription>
<para>Gets a list of all currently online players. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a list of currently online players. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="131" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1acac268b65787dd0261790dab8c4f110d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int endstone::Server::getMaxPlayers</definition>
        <argsstring>() const =0</argsstring>
        <name>getMaxPlayers</name>
        <briefdescription>
<para>Get the maximum amount of players which can login to this server. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the amount of players this server allows </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="138" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a44ff16f118e70e3a032854124ffca958" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::Server::setMaxPlayers</definition>
        <argsstring>(int max_players)=0</argsstring>
        <name>setMaxPlayers</name>
        <param>
          <type>int</type>
          <declname>max_players</declname>
        </param>
        <briefdescription>
<para>Set the maximum amount of players allowed to be logged in at once. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>maxPlayers</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum amount of concurrent players </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="145" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a3f5b8f0687c88f67472718e67adada76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Player" kindref="compound">Player</ref> *</type>
        <definition>virtual Player* endstone::Server::getPlayer</definition>
        <argsstring>(endstone::UUID id) const =0</argsstring>
        <name>getPlayer</name>
        <param>
          <type><ref refid="classendstone_1_1UUID" kindref="compound">endstone::UUID</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Gets the player with the given <ref refid="classendstone_1_1UUID" kindref="compound">UUID</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1UUID" kindref="compound">UUID</ref> of the player to retrieve </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a player object if one was found, null otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="153" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1ab09e09e3f7fe51d16fd5e4e82c95ba49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Player" kindref="compound">Player</ref> *</type>
        <definition>virtual Player* endstone::Server::getPlayer</definition>
        <argsstring>(std::string name) const =0</argsstring>
        <name>getPlayer</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Gets the player with the exact given name, case insensitive. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Exact name of the player to retrieve </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a player object if one was found, null otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="161" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a15cf39bd58121440da4349a222867e29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::Server::broadcast</definition>
        <argsstring>(const std::string &amp;message, const std::string &amp;permission) const =0</argsstring>
        <name>broadcast</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>Broadcasts the specified message to every user with the given permission name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>message to broadcast </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para>the required permission Permissibles must have to receive the broadcast </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="169" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a959f7196b2991d34fb65046629cd6a6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::Server::broadcastMessage</definition>
        <argsstring>(const std::string &amp;message) const =0</argsstring>
        <name>broadcastMessage</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Broadcasts the specified message to every user with permission endstone.broadcast.user. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="176" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a3ed020d4865697b14256c386952aef8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void endstone::Server::broadcastMessage</definition>
        <argsstring>(const fmt::format_string&lt; Args... &gt; format, Args &amp;&amp;...args) const</argsstring>
        <name>broadcastMessage</name>
        <param>
          <type>const fmt::format_string&lt; Args... &gt;</type>
          <declname>format</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="179" column="10" bodyfile="include/endstone/server.h" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Server_1a1a2968bddfbf66a9421477b42219799e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Server::isPrimaryThread</definition>
        <argsstring>() const =0</argsstring>
        <name>isPrimaryThread</name>
        <briefdescription>
<para>Checks the current thread against the expected primary server thread. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the current thread matches the expected primary thread, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/server.h" line="189" column="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a server implementation. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/endstone/server.h" line="37" column="1" bodyfile="include/endstone/server.h" bodystart="37" bodyend="200"/>
    <listofallmembers>
      <member refid="classendstone_1_1Server_1a15cf39bd58121440da4349a222867e29" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>broadcast</name></member>
      <member refid="classendstone_1_1Server_1a7be1e023a703bcc57e49e341c9987397" prot="public" virt="non-virtual"><scope>endstone::Server</scope><name>BroadcastChannelAdmin</name></member>
      <member refid="classendstone_1_1Server_1ac3e6fddabfcbb3075d2539b673d04ed2" prot="public" virt="non-virtual"><scope>endstone::Server</scope><name>BroadcastChannelUser</name></member>
      <member refid="classendstone_1_1Server_1a959f7196b2991d34fb65046629cd6a6a" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>broadcastMessage</name></member>
      <member refid="classendstone_1_1Server_1a3ed020d4865697b14256c386952aef8c" prot="public" virt="non-virtual"><scope>endstone::Server</scope><name>broadcastMessage</name></member>
      <member refid="classendstone_1_1Server_1a9c8fecebf6fb62aa916da3017cb63de6" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>dispatchCommand</name></member>
      <member refid="classendstone_1_1Server_1aaa9adeb8b18d1944314e83375418f1b1" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>getCommandSender</name></member>
      <member refid="classendstone_1_1Server_1a0a736709b490c346ade02b1462f5fb55" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>getLevel</name></member>
      <member refid="classendstone_1_1Server_1a6efe35e1a4eb79e433dbf17edf07fe1b" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>getLevels</name></member>
      <member refid="classendstone_1_1Server_1a0a66b9b4460a3a698ddd2527304f814e" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>getLogger</name></member>
      <member refid="classendstone_1_1Server_1acac268b65787dd0261790dab8c4f110d" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>getMaxPlayers</name></member>
      <member refid="classendstone_1_1Server_1a849bb8c24789cc5130abd4d4bbb5dddb" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>getMinecraftVersion</name></member>
      <member refid="classendstone_1_1Server_1a2478b382f6098c157032048b0f6f64ad" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>getName</name></member>
      <member refid="classendstone_1_1Server_1a87fe533801da1f729baa68cc96099546" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>getOnlinePlayers</name></member>
      <member refid="classendstone_1_1Server_1a3f5b8f0687c88f67472718e67adada76" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>getPlayer</name></member>
      <member refid="classendstone_1_1Server_1ab09e09e3f7fe51d16fd5e4e82c95ba49" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>getPlayer</name></member>
      <member refid="classendstone_1_1Server_1ad65f8ef9b0f8f4af5d56788af89c5367" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>getPluginCommand</name></member>
      <member refid="classendstone_1_1Server_1a612846abaf6bd84f56d1cb81a3c0aa95" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>getPluginManager</name></member>
      <member refid="classendstone_1_1Server_1aee8ec47d389d77f2a36ed49777a77621" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>getScheduler</name></member>
      <member refid="classendstone_1_1Server_1a29d50cb9b2c09942f11148c2e78a9d6b" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>getVersion</name></member>
      <member refid="classendstone_1_1Server_1a1a2968bddfbf66a9421477b42219799e" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>isPrimaryThread</name></member>
      <member refid="classendstone_1_1Server_1a82eb8fae56d70312309a13c558171eae" prot="public" virt="non-virtual"><scope>endstone::Server</scope><name>operator=</name></member>
      <member refid="classendstone_1_1Server_1a2dee067a586bcea2355896f716fc3375" prot="public" virt="non-virtual"><scope>endstone::Server</scope><name>Server</name></member>
      <member refid="classendstone_1_1Server_1ab38f521ee3c088261a6448d3bf9d4dbd" prot="public" virt="non-virtual"><scope>endstone::Server</scope><name>Server</name></member>
      <member refid="classendstone_1_1Server_1a44ff16f118e70e3a032854124ffca958" prot="public" virt="pure-virtual"><scope>endstone::Server</scope><name>setMaxPlayers</name></member>
      <member refid="classendstone_1_1Server_1a6d90d04047e7e0730d9822be14611ba1" prot="public" virt="virtual"><scope>endstone::Server</scope><name>~Server</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
